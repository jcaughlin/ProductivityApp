package edu.matc.entity;

import org.hibernate.annotations.Formula;
import org.hibernate.annotations.Type;

import javax.persistence.*;
import java.sql.Timestamp;

/**
 * Class that gets and gets class names by interaction with Dao and database
 *
 * @author josephcaughlin
 */

@Entity
@Table(name="user_tasks")
public class TaskMaster implements java.io.Serializable{

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name="user_task_pk")
    private int user_task_pk;

    @Column(name="task_name")
    private Task task;

    @Column(name="start_time")
    @Type(type="timestamp")
    private Timestamp taskStartTime;

    @Column(name="end_time")
    @Type(type="timestamp")
    private Timestamp taskEndTime;

    @Formula("end_time - start_time")
    private long totalTimeSpentOnTask;

    // No Argument Constructor
    public TaskMaster() {

    }

    /**
     *
     * @return userTaskPrimaryKey
     */
    public int getUserTaskPrimaryKey() {
        return user_task_pk;
    }

    /**
     *
     * @param user_task_pk Task Primary Key Generated by MySQL.
     */
    public void setUserTaskPrimaryKey(int user_task_pk) {
        this.user_task_pk = user_task_pk;
    }

    /**
     *
     * @return taskName
     */
    public Task getTask() {
        return task;
    }

    /**
     *
     * @param task sets the name of the user task.
     */
    public void setTask(Task task) {
        this.task = task;
    }

    /**
     *
     * @return taskStartTime;
     *
     */
    public Timestamp getTaskStartTime() {
        return taskStartTime;
    }

    /**
     *
     * @param taskStartTime timestamp of time task was started.
     */
    public void setTaskStartTime(Timestamp taskStartTime) {
        this.taskStartTime = taskStartTime;
    }

    /**
     * The timestamp when the user completed the task.
     *
     * @return taskTimeAtCompletion.
     */
    public Timestamp getTaskEndTime() {
        return taskEndTime;
    }

    /**
     *
     * @param taskEndTime Timestamp at time task was completed.
     */
    public void setTaskEndTime(Timestamp taskEndTime) {
        this.taskEndTime = taskEndTime;
    }

    /**
     *
     * @return totalTimeSpentOnTask.
     */
    public long getTotalTimeSpentOnTask() {
        return totalTimeSpentOnTask;
    }

    /**
     *
     * @param totalTimeSpentOnTask Calculates the total time spent on task as the difference between taskEndTime and taskStartTime.
     */
    public void setTotalTimeSpentOnTask(long totalTimeSpentOnTask) {
        this.totalTimeSpentOnTask = totalTimeSpentOnTask;
    }

    /**
     *
     * @return userTaskString;
     */
    public String toString() {
        String userTask = "Name of task: " + taskName + "\nTime Task Commenced: " + taskStartTime + "\nTime Task Completed"
                + taskEndTime + "Total Time To Complete the task";

        return userTask;
    }

}


