package edu.matc.entity;

import org.hibernate.annotations.GenericGenerator;
import javax.persistence.*;

/**
 * Class that gets and gets class names by interaction with Dao and database
 *
 * @author josephcaughlin
 */

@Entity
@Table(name="user_tasks")
public class UserTasks {

    @Id
    @GeneratedValue(generator = "increment")
    @GenericGenerator(name="increment", strategy="increment")
    @Column(name="user_task_id")
    private int userTaskPrimaryKey;

    @Column(name="task_name")
    private String taskName;

    @Column(name="start_time")
    private int taskStartTime;

    @Column(name="end_time")
    private int taskEndTime;

    @Column(name="total_task_time")
    private int totalTimeSpentOnTask;

    // No Argument Constructor
    public UserTasks() {

    }

    /**
     *
     * @return userTaskPrimaryKey
     */
    public int getUserTaskPrimaryKey() {
        return userTaskPrimaryKey;
    }

    /**
     * Primary key generated by mysql
     *
     * @param userTaskPrimaryKey
     */
    public void setUserTaskPrimaryKey(int userTaskPrimaryKey) {
        this.userTaskPrimaryKey = userTaskPrimaryKey;
    }

    /**
     *
     * @return taskName
     */
    public String getTaskName() {
        return taskName;
    }

    /**
     * Sets the name of the User Task.
     * @param taskName
     */
    public void setTaskName(String taskName) {
        this.taskName = taskName;
    }

    /**
     *
     * @return taskStartTime;
     *
     */
    public int getTaskStartTime() {
        return taskStartTime;
    }

    /**
     * Timestamp of time task commenced.
     *
     * @param taskStartTime
     */
    public void setTaskStartTime(int taskStartTime) {
        this.taskStartTime = taskStartTime;
    }

    /**
     * The timestamp when the user completed the task.
     *
     * @return taskTimeAtCompletion.
     */
    public int getTaskEndTime() {
        return taskEndTime;
    }

    /**
     * Uses a TimeStamp of when task was completed by a User.
     *
     * @param taskEndTime
     */
    public void setTaskEndTime(int taskEndTime) {
        this.taskEndTime = taskEndTime;
    }

    /**
     *
     *
     * @return totalTimeSpentOnTask.
     */
    public int getTotalTimeSpentOnTask() {
        return totalTimeSpentOnTask;
    }

    /**
     * Calculates the total time spent on task as the difference between taskEndTime and taskStartTime.
     * @param totalTimeSpentOnTask
     */
    public void setTotalTimeSpentOnTask(int totalTimeSpentOnTask) {
        this.totalTimeSpentOnTask = totalTimeSpentOnTask;
    }

    /**
     * @override
     * @return userTaskString;
     */
    public String toString() {
        String userTask = "Name of task: " + taskName + "\nTime Task Commenced: " + taskStartTime + "\nTime Task Completed"
                + taskEndTime + "Total Time To Complete the task";

        return userTask;
    }

}


